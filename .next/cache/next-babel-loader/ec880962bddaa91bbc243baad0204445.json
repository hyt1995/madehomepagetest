{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/gksdudxkr/\\uC81C\\uB85C\\uCD08/testtest/madehomepagetest/components/ForIndexMap.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport variable from \"./textvariable\";\n\nvar ForIndexMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(ForIndexMap, _React$Component);\n\n  var _super = _createSuper(ForIndexMap);\n\n  function ForIndexMap(_props) {\n    var _this;\n\n    _classCallCheck(this, ForIndexMap);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onmarkerclick\", function (props, marker, e) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        infosindow: marker.name,\n        redirect: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onmapclick\", function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    });\n\n    _this.state = {\n      eventlist: [],\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      infosindow: \"\",\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(ForIndexMap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var mapStyles = {\n        width: \"95%\",\n        height: \"100%\"\n      };\n      var eventmarkers = this.state.eventlist.map(function (item, i) {\n        return __jsx(Marker, {\n          key: i++,\n          name: \"축제 이름: \" + item.title + \"  전화번호: \" + item.tel + \"  시작날짜: \" + item.eventstartdate + \" 끝나는 날짜: \" + item.eventenddate,\n          title: \"축제 이름: \" + item.title + \"  전화번호: \" + item.tel + \"  시작날짜: \" + item.eventstartdate + \" 끝나는 날짜: \" + item.eventenddate,\n          position: {\n            lat: item.mapy,\n            lng: item.mapx\n          },\n          content: item,\n          onClick: _this2.onmarkerclick,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        });\n      });\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: \"#ffffff\",\n          height: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, __jsx(Map, {\n        google: this.props.google,\n        zoom: 8 //14\n        ,\n        style: mapStyles,\n        initialCenter: {\n          lat: 37.57441117,\n          lng: 127.03996869\n        },\n        onClick: this.onmapclick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, __jsx(Marker, {\n        name: \"looptop 본사위치\",\n        title: \"center maker\",\n        position: {\n          lat: 37.57441117,\n          lng: 127.03996869\n        },\n        onClick: this.onmarkerclick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }), __jsx(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        content: \"<div>\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        id: \"iwc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, this.state.infosindow))));\n    }\n  }]);\n\n  return ForIndexMap;\n}(React.Component);\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCgl0XB4EdBHtmyB4P7Pu4HbnM3gndzyiY\"\n})(ForIndexMap);","map":{"version":3,"sources":["/home/gksdudxkr/제로초/testtest/madehomepagetest/components/ForIndexMap.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","Layout","Menu","Breadcrumb","Link","Route","Switch","variable","ForIndexMap","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","infosindow","name","redirect","state","eventlist","mapStyles","width","height","eventmarkers","map","item","i","title","tel","eventstartdate","eventenddate","lat","mapy","lng","mapx","onmarkerclick","backgroundColor","google","onmapclick","Component","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper,Marker,InfoWindow } from \"google-maps-react\"\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, Route,Switch } from \"react-router-dom\"\nimport variable from \"./textvariable\"\n\n\nclass ForIndexMap extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n          eventlist:[],\n          showingInfoWindow: false,\n          activeMarker: {},\n          selectedPlace: {},\n          infosindow:\"\",\n          redirect:false\n        }\n      }\n\n      onmarkerclick=(props,marker, e)=>{\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n            infosindow:marker.name,\n            redirect:true\n        });\n      }\n\n      onmapclick=(props)=>{\n          if(this.state.showingInfoWindow){\n              this.setState({\n                  showingInfoWindow:false,\n                  activeMarker:null\n              })\n          }\n      }\n\n    render(){\n        const mapStyles = {\n            width: \"95%\",\n            height: \"100%\",\n        };\n        const eventmarkers = this.state.eventlist.map((item,i)=>{\n            return(\n                    <Marker key={i++}\n                        name={\"축제 이름: \" + item.title+ \"  전화번호: \" + item.tel+ \"  시작날짜: \" + item.eventstartdate+ \" 끝나는 날짜: \" +item.eventenddate }\n                        title={\"축제 이름: \" + item.title+ \"  전화번호: \" + item.tel+ \"  시작날짜: \" + item.eventstartdate+ \" 끝나는 날짜: \" +item.eventenddate } \n                        position={{ lat:item.mapy, lng:item.mapx }}\n                        content={item}\n                        onClick={this.onmarkerclick}\n                    />\n            )\n        })\n          return(\n              <div style={{backgroundColor:\"#ffffff\", height:\"100%\"}}>\n                  <Map\n                    google = {this.props.google}\n                    zoom={8} //14\n                    style={mapStyles}\n                    initialCenter={{ lat:37.57441117, lng:127.03996869 }}\n                    onClick={this.onmapclick}\n                  >\n                      {/* {eventmarkers} */}\n                      <Marker \n                        name={\"looptop 본사위치\"}\n                        title={\"center maker\"} \n                        position={{ lat:37.57441117, lng:127.03996869 }}\n                        onClick={this.onmarkerclick}\n                      />\n                        <InfoWindow \n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            content=\"<div>\"\n                        >\n                            <div id=\"iwc\">\n                            {this.state.infosindow}\n                            </div>\n                        </InfoWindow>\n                  </Map>\n              </div>\n          )\n        }\n    }\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyCgl0XB4EdBHtmyB4P7Pu4HbnM3gndzyiY\"\n})(ForIndexMap);\n\n"]},"metadata":{},"sourceType":"module"}